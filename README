NAME
    Mock::Person::SK::ROM - Generate random sets of Romani names.

SYNOPSIS
     use Mock::Person::SK::ROM qw(first_male first_female last_male last_female
             middle_male middle_female name name_female name_male);
     my $first_male = first_male();
     my $first_female = first_female();
     my $last_male = last_male();
     my $last_female = last_female();
     my $middle_male = middle_male();
     my $middle_female = middle_female();
     my $name = name($sex);
     my $female_name = name_female();
     my $male_name = name_male();

DESCRIPTION
    Data for this module was found on these pages:

    Last names
        cz.wikipedia.org
        <http://cs.wikipedia.org/wiki/Seznam_nej%C4%8Detn%C4%9Bj%C5%A1%C3%AD
        ch_p%C5%99%C3%ADjmen%C3%AD_v_%C4%8Cesku>

    Middle names
        There's usually no distinction between a first and middle name in
        the Czech Republic.

    First names
        cz.wikipedia.org - male names
        <http://cs.wikipedia.org/wiki/Seznam_nej%C4%8Dast%C4%9Bj%C5%A1%C3%AD
        ch_mu%C5%BEsk%C3%BDch_jmen_v_%C4%8Cesk%C3%A9_republice>,
        cs.wikipedia.org - female names
        <http://cs.wikipedia.org/wiki/Seznam_nej%C4%8Dast%C4%9Bj%C5%A1%C3%AD
        ch_%C5%BEensk%C3%BDch_jmen_v_%C4%8Cesk%C3%A9_republice>.

SUBROUTINES
    first_male()
            Returns random first name of male person.

    first_female()
            Returns random first name of female person.

    last_male()
            Returns random last name of male person.

    last_female()
            Returns random last name of female person.

    middle_male()
            Returns random middle name of male person.

    middle_female()
            Returns random middle name of female person.

    name([$sex])
            Recieves scalar with sex of the person ('male' or 'female') and
            returns scalar with generated name. Default value of $sex
            variable is undef, that means random name.

    name_male()
            Returns random male name.

    name_female()
            Returns random female name.

VARIABLES
    TYPE
             Name type.
             Possible values are: 'two', 'three'.
             Default value is 'two'.

EXAMPLE1
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Encode qw(encode_utf8);
     use Mock::Person::SK::ROM qw(name);

     # Error.
     print encode_utf8(name())."\n";

     # Output like:
     # Kevin Mižigar

EXAMPLE2
     # Pragmas.
     use strict;
     use warnings;

     # Modules.
     use Encode qw(encode_utf8);
     use Mock::Person::SK::ROM;

     # Get all last male names.
     my @last_males = @Mock::Person::SK::ROM::last_male;

     # Print out.
     print sort map { encode_utf8($_)."\n" } @last_males;

     # Output:
     # Absolon
     # Bado
     # Bady
     # Badžo
     # Bagár
     # Balog
     # Balogh
     # Bamberger
     # Bandi
     # Banga
     # Bango
     # Bari
     # Barok
     # Barya
     # Bazylak
     # Bažo
     # Bednár
     # Bendig
     # Bengoro
     # Berki
     # Berko
     # Beňo
     # Beňák
     # Bihári
     # Biháryi
     # Bikar
     # Bilaj
     # Bogol
     # Bokor
     # Botoš
     # Budaj
     # Byl
     # Báro
     # Chanžalik
     # Charvát
     # Cirok
     # Cobas
     # Csocs
     # Dajdy
     # Daniel
     # Danihel
     # Danko
     # Dany
     # Danyi
     # David
     # Daďo
     # Demeter
     # Derulo
     # Deňo
     # Dirda
     # Dudy
     # Dunko
     # Duraj
     # Durasko
     # Durda
     # Durňak
     # Dydyk
     # Dzudza
     # Dzurko
     # Džuga
     # Džuman
     # Fabián
     # Fako
     # Farkaš
     # Fehér
     # Fekete
     # Ferenc
     # Ferko
     # Fečo
     # Fábero
     # Gabčo
     # Gadzor
     # Gadžor
     # Galba
     # Gataš
     # Gatoš
     # Gaži
     # Girga
     # Gizman
     # Giňa
     # Giňo
     # Goga
     # Gondolán
     # Gondy
     # Gorol
     # Grondzár
     # Grundza
     # Guman
     # Gunar
     # Gunár
     # Gábor
     # Hangurbadžo
     # Hanko
     # Herák
     # Hiňa
     # Holdy
     # Holomek
     # Holub
     # Horváth
     # Hrivňák
     # Husar
     # Huňák
     # Ištok
     # Ištván
     # Ištánek
     # Janeček
     # Jano
     # Jurko
     # Jurčo
     # Kajkoš
     # Kaleja
     # Karol
     # Karvaj
     # Kavur
     # Kašperko
     # Kirko
     # Kirvej
     # Klempár
     # Klimt
     # Koky
     # Kotlár
     # Kovács
     # Kováč
     # Kramčanin
     # Kuky
     # Kumaj
     # Kurej
     # Kurko
     # Kučeraj
     # Kýr
     # Lacko
     # Lagryn
     # Lakatoš
     # Latymor
     # Lazok
     # Lofas
     # Lomanth
     # Makaj
     # Makuňa
     # Malar
     # Malík
     # Maďar
     # Mezej
     # Mezga
     # Miazga
     # Miko
     # Milko
     # Mindzár
     # Mirga
     # Mižigar
     # Molnar
     # Murka
     # Mézga
     # Németh
     # Oláh
     # Ondič
     # Oračko
     # Pacaj
     # Pako
     # Petržilka
     # Pfeffer
     # Plachetka
     # Pocikál
     # Pohlodko
     # Polhoš
     # Porčogoš
     # Procházka
     # Richter
     # Rigo
     # Rusznyak
     # Růžička
     # Sakajto
     # Samel
     # Sarkozy
     # Sinu
     # Sivák
     # Stojka
     # Stylar
     # Surmaj
     # Szajko
     # Szamko
     # Tancosz
     # Tancoš
     # Telvak
     # Tomaš
     # Tomko
     # Totorkul
     # Tulej
     # Tuleja
     # Turták
     # Vega
     # Veselý
     # Virag
     # Vrba
     # Zaječí
     # Zaňák
     # Černohorský
     # Červeňák
     # Čisar
     # Čičák
     # Čobak
     # Čonka
     # Čornej
     # Čurej
     # Čureja
     # Čuri
     # Čurko
     # Číča
     # Ďuďa
     # Šajko
     # Šamko
     # Šandor
     # Šarkezy
     # Šidélko
     # Šimko
     # Špivak
     # Šándor
     # Ščuka
     # Šťuko
     # Žiga
     # Žolták

DEPENDENCIES
    Exporter, Readonly.

SEE ALSO
    Mock::Person, Mock::Person::CZ, Mock::Person::DE, Mock::Person::SK,
    Mock::Person::SV, Mock::Person::RU.

REPOSITORY
    <https://github.com/tupinek/Mock-Person-SK-ROM>

AUTHOR
    Michal Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
    BSD license.

VERSION
    0.01

